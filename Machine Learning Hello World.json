{"paragraphs":[{"text":"%md\nThe following paragraph makes the InterSystems IRIS Spark Connector available to Zeppelin's Spark interpreter. \n1. In the upper right hand corner, click \"anonymous\" then \"interpreter\".\n2. Search for the Spark interpreter.\n3. Click \"restart\" for the Spark interpreter.\n4. Run the following paragraph.\n\nNote that the paragraphs below need to be run in order: top to bottom.","user":"anonymous","dateUpdated":"2019-04-25T16:03:30+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>The following paragraph makes the InterSystems IRIS Spark Connector available to Zeppelin&rsquo;s Spark interpreter.<br/>1. In the upper right hand corner, click &ldquo;anonymous&rdquo; then &ldquo;interpreter&rdquo;.<br/>2. Search for the Spark interpreter.<br/>3. Click &ldquo;restart&rdquo; for the Spark interpreter.<br/>4. Run the following paragraph.</p>\n<p>Note that the paragraphs below need to be run in order: top to bottom.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1556204250544_-714705207","id":"20190425-145730_1719758142","dateCreated":"2019-04-25T14:57:30+0000","dateStarted":"2019-04-25T16:03:20+0000","dateFinished":"2019-04-25T16:03:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3828"},{"text":"%spark.dep\r\n//z supplies Zeppelin context\r\nz.reset() \r\nz.load(\"/home/zeppelin/jars/JDK18/intersystems-jdbc-3.0.0.jar\")\r\nz.load(\"/home/zeppelin/jars/JDK18/intersystems-spark-1.0.0.jar\")","user":"anonymous","dateUpdated":"2019-04-25T16:02:05+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1555699472097_1651060219","id":"20190419-184432_1629487532","dateCreated":"2019-04-19T18:44:32+0000","dateStarted":"2019-04-25T16:01:33+0000","dateFinished":"2019-04-25T16:01:33+0000","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3829"},{"text":"%md\nThe following paragraph creates a connection to the InterSystems IRIS spark master running in the iris-community container. You will need to set the password correctly before executing. If you haven't yet logged into IRIS, log in to the [Management Portal] (http://localhost:52773/csp/sys/UtilHome.csp ). The first time you log in, use the SuperUser/SYS as the username/password. You will be directed to a password change page. Update the code in the following paragraph to use your new password.\nAfter you run the following paragraph, you will notice a link for the Spark Job page at the upper right of the paragraph. That link will not work, but you can access the Spark Jobs page here: [Spark Jobs](http://localhost:4040)\n","user":"anonymous","dateUpdated":"2019-04-25T16:03:29+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>The following paragraph creates a connection to the InterSystems IRIS spark master running in the iris-community container. You will need to set the password correctly before executing. If you haven&rsquo;t yet logged into IRIS, log in to the <a href=\"http://localhost:52773/csp/sys/UtilHome.csp\">Management Portal</a>. The first time you log in, use the SuperUser/SYS as the username/password. You will be directed to a password change page. Update the code in the following paragraph to use your new password.<br/>After you run the following paragraph, you will notice a link for the Spark Job page at the upper right of the paragraph. That link will not work, but you can access the Spark Jobs page here: <a href=\"http://localhost:4040\">Spark Jobs</a></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1556204711578_-689629653","id":"20190425-150511_42303738","dateCreated":"2019-04-25T15:05:11+0000","dateStarted":"2019-04-25T16:03:29+0000","dateFinished":"2019-04-25T16:03:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3830"},{"text":"%pyspark\nuname = \"SuperUser\"\npwd = \"SYS1\"\n#spark session available by default through spark variable.\n#URL uses the name of the container, iris-community, as the host name.\niris = spark.read.format(\"iris\").option(\"url\",\"IRIS://iris-community:51773/USER\").option(\"dbtable\",\"DataMining.IrisDataset\").option(\"user\",uname).option(\"password\",pwd).load()\niris.show(10)\n","user":"anonymous","dateUpdated":"2019-04-25T16:02:05+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","tableHide":false},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.179.0.3:4040/jobs/job?id=0"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1555699871939_273672955","id":"20190419-185111_860282069","dateCreated":"2019-04-19T18:51:11+0000","dateStarted":"2019-04-24T17:27:00+0000","dateFinished":"2019-04-24T17:27:15+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3831"},{"text":"%md\nRun the following paragraph to see the number of flowers of each species represented in the data.","user":"anonymous","dateUpdated":"2019-04-25T16:03:38+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Run the following paragraph to see the number of flowers of each species represented in the data.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1556206200282_1297844016","id":"20190425-153000_873554914","dateCreated":"2019-04-25T15:30:00+0000","dateStarted":"2019-04-25T16:03:38+0000","dateFinished":"2019-04-25T16:03:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3832"},{"text":"%pyspark\niris.groupBy(\"Species\").count().show()","user":"anonymous","dateUpdated":"2019-04-25T16:02:14+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","tableHide":false},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.179.0.3:4040/jobs/job?id=6","http://172.179.0.3:4040/jobs/job?id=7","http://172.179.0.3:4040/jobs/job?id=8","http://172.179.0.3:4040/jobs/job?id=9","http://172.179.0.3:4040/jobs/job?id=10"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1555701765873_182778228","id":"20190419-192245_345787518","dateCreated":"2019-04-19T19:22:45+0000","dateStarted":"2019-04-25T16:02:14+0000","dateFinished":"2019-04-25T16:02:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3833"},{"text":"%md\nRun the following paragraph to see a scatter plot of petal length and petal width.","user":"anonymous","dateUpdated":"2019-04-25T16:03:49+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Run the following paragraph to see a scatter plot of petal length and petal width.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1556206223596_702288569","id":"20190425-153023_1560407955","dateCreated":"2019-04-25T15:30:23+0000","dateStarted":"2019-04-25T16:03:49+0000","dateFinished":"2019-04-25T16:03:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3834"},{"text":"%pyspark\n%matplotlib inline\nimport matplotlib.pyplot as plt\n#Retrieve an array of row objects from the DataFrame\nitems = iris.collect()\npetal_length = []\npetal_width = []\nfor item in items:\n    petal_length.append(item['PetalLength'])\n    petal_width.append(item['PetalWidth'])\n\nplt.scatter(petal_width,petal_length)\nplt.xlabel(\"Petal Width\")\nplt.ylabel(\"Petal Length\")\nplt.show()","user":"anonymous","dateUpdated":"2019-04-25T16:02:05+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1555705906297_1538896866","id":"20190419-203146_602786972","dateCreated":"2019-04-19T20:31:46+0000","dateStarted":"2019-04-24T14:54:33+0000","dateFinished":"2019-04-24T14:54:33+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3835"},{"text":"%md\nRun the following paragraph to train a spark linear regression model on the data. The paragraph reserves 30% of the data for testing and shows the trained models predictions for the flowers in the test data.","user":"anonymous","dateUpdated":"2019-04-25T16:04:00+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Run the following paragraph to train a spark linear regression model on the data. The paragraph reserves 30% of the data for testing and shows the trained models predictions for the flowers in the test data.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1556206258460_-1115131489","id":"20190425-153058_226580394","dateCreated":"2019-04-25T15:30:58+0000","dateStarted":"2019-04-25T16:04:00+0000","dateFinished":"2019-04-25T16:04:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3836"},{"text":"%pyspark\nfrom pyspark.ml.regression import LinearRegression\nfrom pyspark.ml.feature import VectorAssembler\n\n# Transform the \"Features\" column(s) into the correct vector format\ndf = iris.select('PetalLength','PetalWidth')\nvectorAssembler = VectorAssembler(inputCols=[\"PetalWidth\"],\n                                  outputCol=\"features\")\ndata=vectorAssembler.transform(df)   \n\n# Split the data into training and test sets.\ntrainingData,testData = data.randomSplit([0.7, 0.3], 0.0)\n\n# Configure the model.\nlr = LinearRegression().setFeaturesCol(\"features\").setLabelCol(\"PetalLength\").setMaxIter(10)\n\n# Train the model using the training data.\nlrm = lr.fit(trainingData)\n\n# Run the test data through the model and display its predictions for PetalLength.\npredictions = lrm.transform(testData)\npredictions.show(10)","user":"anonymous","dateUpdated":"2019-04-25T16:04:38+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----------+----------+--------+------------------+\n|PetalLength|PetalWidth|features|        prediction|\n+-----------+----------+--------+------------------+\n|        1.0|       0.2|   [0.2]| 1.532271267364004|\n|        1.2|       0.2|   [0.2]| 1.532271267364004|\n|        1.3|       0.2|   [0.2]| 1.532271267364004|\n|        1.3|       0.2|   [0.2]| 1.532271267364004|\n|        1.3|       0.2|   [0.2]| 1.532271267364004|\n|        1.4|       0.2|   [0.2]| 1.532271267364004|\n|        1.4|       0.3|   [0.3]|1.7582249988363108|\n|        1.5|       0.1|   [0.1]| 1.306317535891697|\n|        1.5|       0.1|   [0.1]| 1.306317535891697|\n|        1.5|       0.2|   [0.2]| 1.532271267364004|\n+-----------+----------+--------+------------------+\nonly showing top 10 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.179.0.3:4040/jobs/job?id=11","http://172.179.0.3:4040/jobs/job?id=12","http://172.179.0.3:4040/jobs/job?id=13","http://172.179.0.3:4040/jobs/job?id=14","http://172.179.0.3:4040/jobs/job?id=15","http://172.179.0.3:4040/jobs/job?id=16"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1555706108652_-1329148344","id":"20190419-203508_1518353009","dateCreated":"2019-04-19T20:35:08+0000","dateStarted":"2019-04-25T16:04:19+0000","dateFinished":"2019-04-25T16:04:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3837"},{"text":"%md\nRun the following paragraph to retrieve the slope and y-intercept of the regression line and then plot the line in the petal length and width scatter plot.\n","user":"anonymous","dateUpdated":"2019-04-25T16:04:05+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","tableHide":false,"editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Run the following paragraph to retrieve the slope and y-intercept of the regression line and then plot the line in the petal length and width scatter plot.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1556207967711_-1334861559","id":"20190425-155927_349889432","dateCreated":"2019-04-25T15:59:27+0000","dateStarted":"2019-04-25T16:04:05+0000","dateFinished":"2019-04-25T16:04:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3838"},{"text":"%pyspark\n%matplotlib inline\nimport matplotlib.pyplot as plt\n\n# retrieve the slope and y-intercepts of the regression line from the model.\nslope = lrm.coefficients[0]\nintercept = lrm.intercept\n\nprint(\"slope of regression line: %s\" % str(slope))\nprint(\"y-intercept of regression line: %s\" % str(intercept))\n\nitems = iris.collect()\npetal_length = []\npetal_width = []\npetal_features = []\nfor item in items:\n    petal_length.append(item['PetalLength'])\n    petal_width.append(item['PetalWidth'])\nfig, ax = plt.subplots()\nax.scatter(petal_width,petal_length)\nplt.xlabel(\"Petal Width\")\nplt.ylabel(\"Petal Length\")\ny = [slope*x+intercept for x in petal_width]\nax.plot(petal_width, y, color='red')\n\nplt.show()","user":"anonymous","dateUpdated":"2019-04-25T16:04:43+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"slope of regression line: 2.25953731472\ny-intercept of regression line: 1.08036380442\n<matplotlib.figure.Figure at 0x7f2db4ca6c10>\n"},{"type":"IMG","data":"\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.179.0.3:4040/jobs/job?id=17"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1556118041193_525681960","id":"20190424-150041_322831016","dateCreated":"2019-04-24T15:00:41+0000","dateStarted":"2019-04-25T16:04:28+0000","dateFinished":"2019-04-25T16:04:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3839"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2019-04-25T16:02:33+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556208153991_157076754","id":"20190425-160233_207135646","dateCreated":"2019-04-25T16:02:33+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:3840"}],"name":"Machine Learning Hello World","id":"2E83XEF8B","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}